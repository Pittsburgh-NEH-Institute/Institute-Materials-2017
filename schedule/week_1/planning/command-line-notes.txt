Gabi will draft Git bash section (installation, getting around; in Git bash /c/Users/...) has to be aliased. Any interactive command shell must be run as winpty command, e.g., to run "stuff.exe", alias it to "winpty stuff.exe". Edit bash profile to add aliases.

Command line is in Software Carpentry; programs and files is ad hoc (Tara has it from earlier bootcamp)

Digressions in regex: command history (command line); stdin, stdout (programs and files); grep and find (either?); environment variables (programs and files); character sets and Unicode (programs and files)

How commands work: command followed by arguments. Then environment variables, including path. Then pull those together with how command looks at the path. Goal: What happens, and in what order, when you hit Enter at the command line? (e.g., the environment variable helps you know what the command means, and the path tells the shell how to execute a command). bash itself is a program, so you can pass it arguments on the command line.

bash is not the only shell, e.g., Python and SQL shells. 

Do Windows students need to know about cmd? Tara uses PowerShell for package management; Chocolatey is PowerShell scripts with admin privileges, so you need it for Chocolatey, but then close it, because you don't want to use admin privileges at the command line unless you need to. StackOverflow will talk about cmd and PowerShell; users need to know that those don't work in git bash. Cmd and PowerShell may also be needed for troubleshooting.

Include "using your text editor".

Reclaim one of the free slots for an extra Windows session?

Install:

Anaconda Python
Git
Data from Software Carpentry shell course (for practice)
Text editor: unless you are adept, Notepad++ for Windows (install), TextMate for Mac. List others (Atom, TextWrangler, SublimeText). 
Mac: XCode (xcode-select --install)
(Windows: https://www.visualstudio.com/vs/community/; not for this bootcamp)
Windows: bash shell (if running the right version)